#+title: 存储

* 背景
随着Web技术的发展，网站的互动性得到了极大的提升，传统的静态网页逐渐被动态网页取代。网页作为HTML文档，其文档的属性被逐渐弱化，变得更像应用程序。这种变化，虽然就用户体验而言，是一种进步，但却极大的削弱了HTML文档作为知识载体的作用，不再易于检索和归档，也不利于传播。对SHLUG而言，网页需要体现承载知识的作用，更应该像一份电子化的文档。因此，网站的主体是静态网页构成的（而这些静态网页是通过markdown的文本生成的）。

然而，网站一些实用的交互功能，必须通过动态网页才能实现。例如：展示邮件列表的最新帖子、活动报名等。从根本上说，前面提到的动态页面的不足是由两方面造成的，一方面是因为动态内容是浏览器本地渲染而成的，另一方面则是因为用来渲染内容的动态数据不易或不能直接访问。如果能很方便的就能获取到用于渲染动态内容的数据，且数据本身有较强的自解释性且通过数据渲染动态内容的算法或程序简单明了，那么动态网页从某种意义上来说，也就是静态的了。

一般来说，动态页面展示的内容取决于两个因素，首先是动态页面需要的历史数据，其次是浏览者身份相关的数据。以“活动报名”为例，历史数据是从活动开始，到当前时刻，所有报名者的信息；而浏览者身份信息则是能将当前浏览者和其他报名者区分开的特征，例如IP或者浏览器的cookie等，最终页面汇总两方面的信息，显示报名的统计、报名列表，并根据当前用户是否已报名，决定是否显示报名表格。因此，SEIA的存储需要实现用户特征的存储和历史数据存储两方面功能。
* 数据模型
** 用户特征
SEIA通过用户唯一的ED25519公钥来标识用户，即用户ID（UID）。UID以及对应的私钥通过IndexedDB保存在本地。
** 历史数据
历史数据是过去发生的事件的总和，具有不可变性，当前的状态是过去所有相关事件的累加。对于某个页面相关的历史数据，需要能通过某种方式获取随着时间增加的事件集合。每个事件通过键值对的形式存储（即KV存储），由于事件本质上是某个节点发出的消息，因此消息的签名可以作为事件的键。因此，SEIA需要提供一个分布式键值存储系统和可订阅的消息系统，或者类似Git的分布式版本控制系统。
